{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/actions/room.actions.ts","webpack:///src/app/actions/user.actions.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/poker/each-user-card/each-user-card.component.ts","webpack:///src/app/poker/each-user-card/each-user-card.component.html","webpack:///src/app/poker/poker.component.ts","webpack:///src/app/poker/poker.component.html","webpack:///src/app/poker/poker.service.ts","webpack:///src/app/poker/vote-card/vote-card.component.ts","webpack:///src/app/poker/vote-card/vote-card.component.html","webpack:///src/app/reducers/index.ts","webpack:///src/app/registration/registration.component.ts","webpack:///src/app/registration/registration.component.html","webpack:///src/app/registration/registration.service.ts","webpack:///src/app/selectors/room.selector.ts","webpack:///src/app/selectors/users.selector.ts","webpack:///src/app/utils/rx-utils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","RoomActionTypes","LoadRooms","type","SetRoomId","roomId","UserActionTypes","SetUserDetails","userName","userId","isOwner","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","metaReducers","production","instrument","declarations","providers","bootstrap","EachUserCardComponent","PokerComponent","store","pokerService","availbleVotes","value","isSelected","select","subscribe","userDetails","pipe","getRoomStatusPoll","roomStatus","story","currentRoomUsers","users","flipCards","resetAllSelectedCards","resetCards","map","aa","castVote","newStoryId","window","prompt","updateStoryId","PokerService","httpClient","get","getRoomStatus","put","storyPoints","post","storyId","storyDetails","storyDescription","providedIn","VoteCardComponent","selectedVote","emit","vote","selected","reducers","user","UserReducer","room","RoomReducer","initialUserState","state","action","initialRoomState","onwer","RegistrationComponent","fb","registrationService","router","formGroup","group","name","required","emailId","createRoom","response","dispatch","navigate","joinRoom","alert","BASE_URL","RegistrationService","console","log","data","_","error","roomSelector","roomIdSelector","userSelector","userDetailsSelector","stopOn","predicate","source","subscriber","s","next","unsubscribe","complete","poll","pollingTime","stopPollWhen","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Action } from '@ngrx/store';\n\nexport enum RoomActionTypes {\n  LoadRooms = '[Room] Load Rooms',\n  SetRoomId = '[Room] Set Room Id',\n}\n\nexport class LoadRooms implements Action {\n  readonly type = RoomActionTypes.LoadRooms;\n}\n\nexport class SetRoomId implements Action {\n  readonly type = RoomActionTypes.SetRoomId;\n  constructor(public roomId: number) {}\n}\n\nexport type RoomActions = LoadRooms | SetRoomId;\n","import { Action } from '@ngrx/store';\n\nexport enum UserActionTypes {\n  SetUserDetails = '[User] Set User Details',\n}\n\nexport class SetUserDetails implements Action {\n  readonly type = UserActionTypes.SetUserDetails;\n  constructor(\n    public userName: string,\n    public userId: string,\n    public isOwner: boolean\n  ) {}\n}\n\nexport type UserActions = SetUserDetails;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PokerComponent } from './poker/poker.component';\n\nconst routes: Routes = [\n  { path: 'poker', component: PokerComponent },\n  {\n    path: '',\n    component: RegistrationComponent,\n  },\n  {\n    path: '**',\n    component: RegistrationComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'planning-poker-ng';\n}\n","<h2>Planning Poker</h2>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { reducers, metaReducers } from './reducers';\nimport { PokerComponent } from './poker/poker.component';\nimport { EachUserCardComponent } from './poker/each-user-card/each-user-card.component';\nimport { VoteCardComponent } from './poker/vote-card/vote-card.component';\n\n@NgModule({\n  declarations: [AppComponent, RegistrationComponent, PokerComponent, EachUserCardComponent, VoteCardComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-each-user-card',\n  templateUrl: './each-user-card.component.html',\n  styleUrls: ['./each-user-card.component.less'],\n})\nexport class EachUserCardComponent implements OnInit {\n  @Input() user;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div style=\"height: 5px;\" [class.casted-vote]=\"user?.castedVote\"></div>\n<div class=\"card\">\n  <div class=\"story-points\">\n    {{ user?.storyPoints }}\n  </div>\n  <div class=\"container\">\n    <label>\n      <b>{{ user?.userName }}</b>\n    </label>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { State } from '../reducers';\nimport { userDetailsSelector } from '../selectors/users.selector';\nimport { roomIdSelector } from '../selectors/room.selector';\nimport { map, skipUntil, filter, distinctUntilChanged } from 'rxjs/operators';\nimport { PokerService } from './poker.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-poker',\n  templateUrl: './poker.component.html',\n  styleUrls: ['./poker.component.less'],\n})\nexport class PokerComponent implements OnInit {\n  userName = 'Sai';\n  userId;\n  isOwner;\n  roomId;\n  currentRoomUsers;\n  availbleVotes = [\n    { value: 1, isSelected: false },\n    { value: 2, isSelected: false },\n    { value: 3, isSelected: false },\n    { value: 5, isSelected: false },\n    { value: 8, isSelected: false },\n    { value: 13, isSelected: false },\n    { value: 21, isSelected: false },\n  ];\n  selectedVote;\n  story;\n\n  constructor(public store: Store<State>, public pokerService: PokerService) {\n    this.store.select(roomIdSelector).subscribe(({ roomId }) => {\n      this.roomId = roomId;\n    });\n  }\n\n  ngOnInit(): void {\n    this.store.select(userDetailsSelector).subscribe((userDetails) => {\n      const { userName, userId, isOwner } = userDetails;\n      this.userName = userName;\n      this.userId = userId;\n      this.isOwner = isOwner;\n    });\n\n    this.store\n      .select(roomIdSelector)\n      .pipe(\n        filter(({ roomId }) => roomId != 0),\n        distinctUntilChanged()\n      )\n      .subscribe(({ roomId }) => {\n        this.pokerService\n          .getRoomStatusPoll(roomId)\n          .subscribe((roomStatus: any) => {\n            this.story = roomStatus.story;\n            this.currentRoomUsers = roomStatus.users;\n          });\n      });\n  }\n\n  flipCards() {\n    this.pokerService.flipCards(this.roomId).subscribe(() => {});\n  }\n\n  resetCards() {\n    this.resetAllSelectedCards();\n    this.pokerService.resetCards(this.roomId).subscribe(() => {});\n  }\n\n  onVoteSelected(value) {\n    this.availbleVotes = this.availbleVotes.map((aa) => {\n      return {\n        value: aa.value,\n        isSelected: aa.value === value,\n      };\n    });\n    this.pokerService\n      .castVote(this.userId, value, this.roomId)\n      .subscribe(() => {});\n  }\n\n  onStoryIdEdit() {\n    var newStoryId = window.prompt('Plese enter new Stroy ID', 'WA-');\n\n    if (newStoryId !== null && newStoryId !== '') {\n      this.pokerService\n        .updateStoryId(newStoryId, this.roomId)\n        .subscribe(() => {});\n    }\n  }\n\n  resetAllSelectedCards() {\n    this.availbleVotes = this.availbleVotes.map((aa) => {\n      return {\n        value: aa.value,\n        isSelected: false,\n      };\n    });\n  }\n}\n","<div>\n  <div class=\"room-info\">\n    <h3>Hi {{ userName }} !!</h3>\n    <div>\n      Story: {{ story?.storyId\n      }}<button\n        style=\"margin-left: 5px;\"\n        *ngIf=\"isOwner\"\n        (click)=\"onStoryIdEdit()\"\n      >\n        Edit\n      </button>\n    </div>\n    <div>\n      <button *ngIf=\"isOwner\" (click)=\"flipCards()\">Flip Cards</button>\n      <button *ngIf=\"isOwner\" style=\"margin-left: 5px;\" (click)=\"resetCards()\">\n        Reset\n      </button>\n      <h3>Room Id: {{ roomId }}</h3>\n    </div>\n  </div>\n\n  <div style=\"display: flex; flex-wrap: wrap;\">\n    <app-each-user-card\n      style=\"margin: 10px;\"\n      *ngFor=\"let user of currentRoomUsers\"\n      [user]=\"user\"\n    ></app-each-user-card>\n  </div>\n\n  <div style=\"margin-top: 100px;\">\n    Select your story points:\n    <div style=\"display: flex; flex-wrap: wrap; justify-content: center;\">\n      <app-vote-card\n        style=\"margin: 10px;\"\n        *ngFor=\"let vote of availbleVotes\"\n        [vote]=\"vote\"\n        (selectedVote)=\"onVoteSelected($event)\"\n      ></app-vote-card>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { poll } from '../utils/rx-utils';\nimport { BASE_URL } from '../registration/registration.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PokerService {\n  constructor(public httpClient: HttpClient) {}\n\n  getRoomStatus(roomId) {\n    return this.httpClient.get(`${BASE_URL}/rooms/status/${roomId}`);\n  }\n\n  getRoomStatusPoll(roomId) {\n    return poll(this.getRoomStatus(roomId), 2000, () => false);\n  }\n\n  flipCards(roomId) {\n    return this.httpClient.put(`${BASE_URL}/rooms/flipCards/${roomId}`, {});\n  }\n\n  resetCards(roomId) {\n    return this.httpClient.put(`${BASE_URL}/rooms/resetStory/${roomId}`, {});\n  }\n\n  castVote(userId, storyPoints, roomId) {\n    return this.httpClient.post(`${BASE_URL}/rooms/castVote/`, {\n      userId,\n      storyPoints,\n      roomId,\n    });\n  }\n\n  updateStoryId(storyId, roomId) {\n    return this.httpClient.post(`${BASE_URL}/rooms/setStoryDetails`, {\n      storyDetails: { storyId, storyDescription: '' },\n      roomId,\n    });\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-vote-card',\n  templateUrl: './vote-card.component.html',\n  styleUrls: ['./vote-card.component.less'],\n})\nexport class VoteCardComponent implements OnInit {\n  @Input() vote;\n  @Output() selectedVote = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  selected() {\n    this.selectedVote.emit(this.vote.value);\n  }\n}\n","<div class=\"card\" [class.selected]=\"vote?.isSelected\">\n  <div class=\"story-points\" (click)=\"selected()\">\n    {{ vote?.value }}\n  </div>\n</div>\n","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer,\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport { UserActions, UserActionTypes } from '../actions/user.actions';\nimport { RoomActions, RoomActionTypes } from '../actions/room.actions';\n\nexport interface State {\n  user: UserState;\n  room: RoomState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  user: UserReducer,\n  room: RoomReducer,\n};\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production\n  ? []\n  : [];\n\nexport interface UserState {\n  userName: string;\n  userId: string;\n  isOwner: boolean;\n}\n\nconst initialUserState: UserState = {\n  userId: '',\n  userName: '',\n  isOwner: false,\n};\n\nexport function UserReducer(\n  state: UserState = initialUserState,\n  action: UserActions\n): UserState {\n  switch (action.type) {\n    case UserActionTypes.SetUserDetails:\n      return {\n        ...state,\n        userId: action.userId,\n        userName: action.userName,\n        isOwner: action.isOwner,\n      };\n    default:\n      return state;\n  }\n}\n\nexport interface RoomState {\n  roomId: number;\n  onwer: string;\n  story: {\n    storyId: string;\n    storyDescription: string;\n  };\n  users: any;\n  flipCards: boolean;\n}\n\nconst initialRoomState: RoomState = {\n  roomId: 0,\n  onwer: '',\n  story: {\n    storyId: '',\n    storyDescription: '',\n  },\n  users: [],\n  flipCards: false,\n};\n\nexport function RoomReducer(\n  state: RoomState = initialRoomState,\n  action: RoomActions\n): RoomState {\n  switch (action.type) {\n    case RoomActionTypes.SetRoomId:\n      return {\n        ...state,\n        roomId: action.roomId,\n      };\n    default:\n      return state;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegistrationService } from './registration.service';\n\nimport { Store } from '@ngrx/store';\nimport { State } from '../reducers';\nimport { SetUserDetails } from '../actions/user.actions';\nimport { Router } from '@angular/router';\nimport { SetRoomId } from '../actions/room.actions';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.less'],\n})\nexport class RegistrationComponent implements OnInit {\n  formGroup: FormGroup;\n  constructor(\n    public fb: FormBuilder,\n    public registrationService: RegistrationService,\n    public store: Store<State>,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.formGroup = this.fb.group({\n      name: ['', Validators.required],\n      emailId: ['', Validators.required],\n      roomId: [''],\n    });\n  }\n\n  createRoom() {\n    const { name, emailId } = this.formGroup.value;\n    this.registrationService\n      .createRoom(name, emailId)\n      .subscribe((response: any) => {\n        const { userDetails, roomId, isOwner } = response;\n        const { userName, userId } = userDetails;\n        this.store.dispatch(new SetUserDetails(userName, userId, isOwner));\n        this.store.dispatch(new SetRoomId(roomId));\n        this.router.navigate(['/poker']);\n      });\n  }\n\n  joinRoom() {\n    const { name, emailId, roomId } = this.formGroup.value;\n    if (roomId) {\n      this.registrationService\n        .joinRoom(name, emailId, roomId)\n        .subscribe((response: any) => {\n          const { userDetails, roomId, isOwner } = response;\n          const { userName, userId } = userDetails;\n          this.store.dispatch(new SetUserDetails(userName, userId, isOwner));\n          this.store.dispatch(new SetRoomId(roomId));\n          this.router.navigate(['/poker']);\n        });\n    } else {\n      alert('Please enter Room ID if you want to join a room');\n    }\n  }\n}\n","<div class=\"registration-card\">\n  <form class=\"form\" [formGroup]=\"formGroup\">\n    <div class=\"input\">\n      <label>Name:</label>\n      <input type=\"text\" formControlName=\"name\" />\n    </div>\n    <div class=\"input\">\n      <label>Email Id:</label>\n      <input type=\"email\" formControlName=\"emailId\" />\n    </div>\n    <div class=\"input\">\n      <label>Room Id:</label>\n      <input type=\"text\" formControlName=\"roomId\" />\n    </div>\n    <button (click)=\"createRoom()\" [disabled]=\"!formGroup.valid\">\n      Create Room\n    </button>\n    <button (click)=\"joinRoom()\" [disabled]=\"!formGroup.valid\">\n      Join Room\n    </button>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, catchError, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nexport const BASE_URL = 'https://planning-poker-api-teja.herokuapp.com';\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationService {\n  constructor(private httpClient: HttpClient) {}\n\n  createRoom(userName, userId) {\n    this.httpClient.get(BASE_URL).subscribe(console.log);\n    return this.httpClient.post(`${BASE_URL}/rooms/createRoom`, {\n      userDetails: {\n        userName,\n        userId,\n      },\n    });\n  }\n\n  joinRoom(userName, userId, roomId) {\n    return this.httpClient\n      .post(`${BASE_URL}/rooms/joinRoom`, {\n        userDetails: {\n          userName,\n          userId,\n        },\n        roomId,\n      })\n      .pipe(\n        map((data) => data),\n        catchError((_) => {\n          alert(_.error.error);\n          return of([]);\n        })\n      );\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { RoomState } from '../reducers';\n\nconst roomSelector = createFeatureSelector<RoomState>('room');\n\nexport const roomIdSelector = createSelector(\n  roomSelector,\n  (state: RoomState) => ({\n    roomId: state.roomId,\n  })\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { UserState } from '../reducers';\n\nconst userSelector = createFeatureSelector<UserState>('user');\n\nexport const userDetailsSelector = createSelector(\n  userSelector,\n  (state: UserState) => ({\n    userName: state.userName,\n    userId: state.userId,\n    isOwner: state.isOwner,\n  })\n);\n","import { Observable, timer } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nexport const stopOn = <T>(predicate?: (x: T) => boolean) => (\n  source: Observable<T>\n) => {\n  return new Observable<T>(subscriber => {\n    let s = source.subscribe({\n      next(value) {\n        if (predicate && predicate(value)) {\n          s.unsubscribe();\n        }\n        subscriber.next(value);\n      },\n      error(error) {\n        subscriber.error(error);\n      },\n      complete() {\n        subscriber.complete();\n      }\n    });\n    return s;\n  });\n};\n\nexport function poll<T>(\n  source: Observable<T>,\n  pollingTime: number,\n  stopPollWhen?: (x: T) => boolean\n) {\n  return timer(0, pollingTime).pipe(\n    concatMap(_ => source),\n    stopOn(stopPollWhen)\n  );\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}